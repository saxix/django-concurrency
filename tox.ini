[tox]
envlist = d{42,51}-py{311,312}-{pg,sqlite,mysql},docs,lint,package


[pytest]
pythonpath=./tests/demoapp/ src
django_find_project = false
DJANGO_SETTINGS_MODULE=demo.settings
norecursedirs = .tox docs ./demoapp/
python_files=tests/test_*.py
allowlist_externals=pytest
addopts =
      -q
      -p no:warnings
      --tb=short
      --capture=no
      --echo-version django
      --echo-attr django.conf.settings.DATABASES.default.ENGINE
      --cov=concurrency
      --cov-report=html
      --cov-config=tests/.coveragerc

pep8ignore = * ALL
markers =
  functional: mark a test as functional
  admin:  admin tests

[testenv]
;install_command=pip install {opts} {packages}
passenv =
    PYTHONDONTWRITEBYTECODE
    PGHOST
    PGPORT

whitelist_externals =
                    mkdir
                    /usr/local/bin/psql
                    /bin/sh
                    /usr/local/bin/mysql
                    /usr/local/mysql/bin/mysql
                    /usr/bin/psql
changedir={toxinidir}
setenv =
    PYTHONPATH =
    DBNAME = concurrency
    pg: DBENGINE = pg
    mysql: DBENGINE = mysql
    sqlite: DBENGINE = sqlite


deps =
    .[dev]
    pdm
    pypy-pg: psycopg2cffi
    mysql: mysqlclient
    d42: django==4.2.*
    d51: django==5.1.*


commands =
    pdm install --dev
    {posargs:pytest tests -x -rw --create-db}

[testenv:mysql]
commands =
    - mysql -u root -h 127.0.0.1 -e 'DROP DATABASE IF EXISTS concurrency;'
    - mysql -u root -h 127.0.0.1 -e 'CREATE DATABASE IF NOT EXISTS concurrency;'
    {[testenv]commands}

[testenv:pg]
commands =
    - psql  -h $PGHOST -p $PGPORT -c 'DROP DATABASE "concurrency";' -U postgres
    - psql  -h $PGHOST -p $PGPORT  -c 'CREATE DATABASE "concurrency";' -U postgres
    {[testenv]commands}

[testenv:clean]
commands =
    mysql: - mysql -u root -e 'DROP DATABASE IF EXISTS concurrency;'
    pg: - psql -c 'DROP DATABASE "concurrency";' -U postgres


[testenv:docs]
basepython = python312
deps =
    -rdocs/requirements.pip
commands =
    mkdir -p ~build/docs
    pdm run sphinx-build -aE docs/ ~build/docs

[testenv:lint]
envdir={toxworkdir}/d42-py312/
skip_install = true
commands =
    pip install flake8 isort
    flake8 src tests
    isort -c src tests


[testenv:package]
deps=
    build
    twine

setenv =
    TWINE_USERNAME = {env:TWINE_TEST_USERNAME:__token__}
    TWINE_PASSWORD = {env:TWINE_TEST_PASSWORD}

commands =
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -m build
    python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
